class DateTimePicker{static defaultSettings={language:"en-US",firstDayOfWeek:0,showCalendar:!0,showDaysOfWeek:!0,showSliders:!0,showUTC:!0,showDOYtoggle:!1,mode:"inline",useBootstrap:!1,onDateSelect:null,onTimeChange:null,setNowIncludesTime:!1,slidersToShow:["hours","minutes"],showFooter:!0,showNowButton:!0,showSelectedDatetime:!0,showCloseButton:!0};constructor(e,t){this.settings={...DateTimePicker.defaultSettings,...t};const s=t?.initialValue?new Date(t.initialValue):new Date;this.selectedDate=isNaN(s.getTime())?new Date:s,this.container=null,this.init(e)}init(e){this.createPicker(e),this.populateDropdowns(),this.renderCalendar(),this.bindEvents(e),this.settings.mode==="inline"?(this.container.style.display="block",this.datetimePicker.style.display="block",this.datetimePicker.style.position="static"):(this.container.style.display="none",this.datetimePicker.style.display="none",this.datetimePicker.parentElement.style.display="none"),this.toggleFeatures()}createPicker(e){const t=document.createElement("div");t.classList.add("datetime-container"),t.style.display="none",t.innerHTML=`
        <div class="datetime-picker border rounded shadow p-3 bg-white" role="dialog" aria-hidden="true">
            ${this.getControlsHTML()}
            ${this.getDOWHTML()}
            ${this.getCalendarHTML()}
            ${this.getSelectedTimeHTML()}
            ${this.getSlidersHTML()}
            ${this.getTogglesHTML()}
            ${this.getFooterHTML()}
        </div>
    `,e.parentNode&&e.parentNode.insertBefore(t,e.nextSibling),this.cacheElements(t)}getControlsHTML(){return`
    <div class="calendar-controls mb-3 d-flex align-items-center justify-content-between">
        <button type="button" class="btn btn-primary me-2" id="prev-month" aria-label="Previous Month">
            <span>&lt;</span>
        </button>
        <div class="input-group">
            <select id="monthSelect" class="form-select pe-4" aria-label="Select Month"></select>
            <select id="yearSelect" class="form-select" aria-label="Select Year"></select>
        </div>
        <button type="button" class="btn btn-primary ms-2" id="next-month" aria-label="Next Month">
            <span>&gt;</span>
        </button>
    </div>
    `}getDOWHTML(){const e=document.createElement("div");e.id="days-of-week";const t=new Intl.DateTimeFormat(this.settings.language,{weekday:"short"}),s=Array.from({length:7},(l,n)=>t.format(new Date(2023,0,n+1))),i=this.settings.firstDayOfWeek,a=[...s.slice(i),...s.slice(0,i)];for(const l of a){const n=document.createElement("div");n.textContent=l,n.classList.add("dow-cell"),e.appendChild(n)}return e.outerHTML}populateYearDropdown(){const e=this.selectedDate.getFullYear(),t=20;this.startYear=e-Math.floor(t/2),this.endYear=e+Math.floor(t/2),this.loadYearRange(),this.yearSelect.addEventListener("change",s=>this.handleYearSelection(s))}loadYearRange(){const e=[];for(let t=this.startYear;t<=this.endYear;t++)e.push(`<option value="${t}">${t}</option>`);this.yearSelect.innerHTML=e.join(""),this.yearSelect.value=this.selectedDate.getFullYear()}handleYearSelection(e){const t=parseInt(e.target.value);t===this.startYear?this.loadMoreYears("backward"):t===this.endYear&&this.loadMoreYears("forward")}loadMoreYears(e){e==="forward"?(this.startYear=this.endYear,this.endYear=this.startYear+20):e==="backward"&&(this.endYear=this.startYear,this.startYear=this.endYear-20),this.loadYearRange()}getCalendarHTML(){return'<div id="calendar" class="calendar mb-3" role="grid" aria-label="Calendar"></div>'}getSelectedTimeHTML(){return this.settings.showSelectedDatetime?`<div class="d-flex flex-row justify-content-between mb-1">
                <label for="selected-datetime">Day and Time:</label>
                <input id="selected-datetime" class="text-end" aria-live="polite" aria-readonly="true" readonly disabled aria-disabled="true">
            </div>`:""}getSlidersHTML(){return`<div class="slider-container mb-3">${this.settings.slidersToShow.map(t=>{switch(t){case"hours":return this.getSliderHTML("hours","Hours",0,23);case"minutes":return this.getSliderHTML("minutes","Minutes",0,59);case"seconds":return this.getSliderHTML("seconds","Seconds",0,59);case"nanoseconds":return this.getSliderHTML("nanoseconds","Nanoseconds",0,999999999);default:return""}}).join("")}</div>`}getSliderHTML(e,t,s,i){return`
                <div class="d-flex flex-row align-items-center">
                        <label for="${e}" class="form-label me-2">${t}:</label>
                        <input type="range" id="${e}" value="0" min="${s}" max="${i}" step="1" class="form-range w-50 ms-auto" aria-label="${t}">
                </div>
            `}getTogglesHTML(){return`
                <div class="toggle-container justify-content-between w-100">
                    <div class="form-check form-switch">
                        <input type="checkbox" id="utc-toggle" class="form-check-input" aria-label="Toggle UTC Time">
                        <label for="utc-toggle" class="form-check-label">Local/UTC</label>
                    </div>
                    <div class="form-check form-switch mb-3">
                        <input type="checkbox" id="doy-toggle" class="form-check-input" aria-label="Toggle Day of Year">
                        <label for="doy-toggle" class="form-check-label">Day of Month/Day of Year</label>
                    </div>
                </div>
            `}getFooterHTML(){if(!this.settings.showFooter)return"";const e=this.settings.showNowButton?'<button type="button" class="btn btn-secondary" id="now-button" aria-label="Set to Now">Now</button>':"",t=this.settings.showCloseButton?'<button type="button" class="btn btn-primary" id="close-button" aria-label="Close">Close</button>':"";return`
        <div class="d-flex justify-content-between align-items-center">
            ${e}
            ${t}
        </div>
    `}cacheElements(e){this.container=e,this.datetimePicker=e.querySelector(".datetime-picker"),this.monthSelect=e.querySelector("#monthSelect"),this.yearSelect=e.querySelector("#yearSelect"),this.calendar=e.querySelector("#calendar"),this.hoursSlider=this.settings.slidersToShow.includes("hours")?e.querySelector("#hours"):null,this.minutesSlider=this.settings.slidersToShow.includes("minutes")?e.querySelector("#minutes"):null,this.secondsSlider=this.settings.slidersToShow.includes("seconds")?e.querySelector("#seconds"):null,this.nanosecondsSlider=this.settings.slidersToShow.includes("nanoseconds")?e.querySelector("#nanoseconds"):null,this.utcToggle=e.querySelector("#utc-toggle"),this.dowDiv=e.querySelector("#days-of-week"),this.doyToggle=e.querySelector("#doy-toggle"),this.selectedDatetime=this.settings.showSelectedDatetime?e.querySelector("#selected-datetime"):null,this.closeBtn=this.settings.showCloseButton?e.querySelector("#close-button"):null}bindEvents(e){e&&e.addEventListener("click",i=>this.togglePicker(i)),this.monthSelect.addEventListener("change",()=>this.updateCalendarDate()),this.yearSelect.addEventListener("change",()=>this.updateCalendarDate()),this.yearSelect.addEventListener("input",i=>this.handleYearInputChange(i));const t=this.container.querySelector("#prev-month"),s=this.container.querySelector("#next-month");t.addEventListener("click",()=>this.changeMonth(-1)),s.addEventListener("click",()=>this.changeMonth(1)),this.hoursSlider&&this.hoursSlider.addEventListener("input",()=>this.updateSelectedDatetime()),this.minutesSlider&&this.minutesSlider.addEventListener("input",()=>this.updateSelectedDatetime()),this.secondsSlider&&this.secondsSlider.addEventListener("input",()=>this.updateSelectedDatetime()),this.nanosecondsSlider&&this.nanosecondsSlider.addEventListener("input",()=>this.updateSelectedDatetime()),this.utcToggle.addEventListener("change",()=>this.updateSelectedDatetime()),this.doyToggle.addEventListener("change",()=>this.renderCalendar()),this.calendar.addEventListener("click",i=>this.handleDateSelection(i)),this.calendar.addEventListener("keydown",i=>{(i.key===" "||i.key==="Enter")&&this.handleDateSelection(i)}),this.doyToggle.addEventListener("change",()=>this.renderCalendar()),this.settings.showNowButton&&this.container.querySelector("#now-button").addEventListener("click",()=>this.setToNow()),this.settings.showCloseButton&&this.closeBtn.addEventListener("click",i=>this.togglePicker(i))}setToNow(){const e=new Date;this.selectedDate.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),this.settings.setNowIncludesTime&&(this.selectedDate.setHours(e.getHours()),this.selectedDate.setMinutes(e.getMinutes()),this.selectedDate.setSeconds(e.getSeconds()),this.selectedDate.setMilliseconds(e.getMilliseconds()),this.hoursSlider.value=e.getHours(),this.minutesSlider.value=e.getMinutes(),this.secondsSlider.value=e.getSeconds(),this.nanosecondsSlider.value=e.getMilliseconds()*1e6),this.monthSelect.value=e.getMonth(),this.yearSelect.value=e.getFullYear(),this.renderCalendar(),this.populateYearDropdown(),this.updateSelectedDatetime()}changeMonth(e){const t=this.selectedDate.getMonth();this.selectedDate.setMonth(t+e),this.monthSelect.value=this.selectedDate.getMonth(),this.yearSelect.value=this.selectedDate.getFullYear(),this.renderCalendar(),this.updateSelectedDatetime()}handleYearInputChange(e){const t=parseInt(e.target.value,10);isNaN(t)||(this.selectedDate.setFullYear(t),this.monthSelect.value=this.selectedDate.getMonth(),this.yearSelect.value=this.selectedDate.getFullYear(),this.renderCalendar(),this.updateSelectedDatetime())}togglePicker(e){if(e.stopPropagation(),this.settings.mode==="inline")return;this.datetimePicker.style.display==="block"?(this.datetimePicker.style.display="none",this.datetimePicker.parentElement.style.display="none",this.datetimePicker.setAttribute("aria-hidden","true")):(this.positionPicker(e.target),this.datetimePicker.style.display="block",this.datetimePicker.parentElement.style.display="block",this.datetimePicker.setAttribute("aria-hidden","false"))}positionPicker(e){const t=e.offsetParent;(!t.style.position||t.style.position==="static")&&(t.style.position="relative"),this.datetimePicker.style.position="absolute",this.datetimePicker.style.zIndex="1000"}populateDropdowns(){this.populateMonthDropdown(),this.populateYearDropdown()}populateMonthDropdown(){const e=this.getMonthNames();this.monthSelect.innerHTML=e.map((t,s)=>`<option value="${s}">${t}</option>`).join(""),this.monthSelect.value=this.selectedDate.getMonth()}getMonthNames(){return Array.from({length:12},(e,t)=>new Date(2023,t).toLocaleString(this.settings.language,{month:"long"}))}renderCalendar(){const e=this.selectedDate.getFullYear(),t=this.selectedDate.getMonth(),s=new Date(e,t,1).getDay(),i=new Date(e,t+1,0).getDate();this.calendar.innerHTML="";const a=document.createDocumentFragment(),l=(s-this.settings.firstDayOfWeek+7)%7;for(let n=0;n<l;n++){const o=document.createElement("div");o.setAttribute("role","presentation"),a.appendChild(o)}for(let n=1;n<=i;n++){const o=new Date(e,t,n),r=this.createDayCell(o,n);a.appendChild(r)}this.calendar.appendChild(a)}createDayCell(e,t){const s=document.createElement("div");s.classList.add("day-cell"),s.tabIndex=0,s.setAttribute("role","gridcell");const i=this.isSameDate(e,this.selectedDate);return s.textContent=this.doyToggle.checked?this.getDayOfYear(e):t,s.dataset.date=`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(t).padStart(2,"0")}`,i?(s.classList.add("selected"),s.setAttribute("aria-selected","true")):s.setAttribute("aria-selected","false"),s}getDayOfYear(e){const t=new Date(e.getFullYear(),0,1),s=e-t+(t.getTimezoneOffset()-e.getTimezoneOffset())*60*1e3;return Math.floor(s/(1e3*60*60*24))+1}handleDateSelection(e){const t=e.target.closest(".day-cell");if(!t)return;const[s,i,a]=t.dataset.date.split("-").map(Number),l=new Date(s,i-1,a);this.selectedDate=l,this.renderCalendar(),this.updateSelectedDatetime(),this.settings.onDateSelect&&this.settings.onDateSelect(l)}updateCalendarDate(){const e=parseInt(this.yearSelect.value,10),t=parseInt(this.monthSelect.value,10);this.selectedDate.setFullYear(e,t),this.renderCalendar()}updateSelectedDatetime(){const e=new Date(this.selectedDate);this.hoursSlider&&e.setHours(this.hoursSlider.value),this.minutesSlider&&e.setMinutes(this.minutesSlider.value),this.secondsSlider&&e.setSeconds(this.secondsSlider.value),this.nanosecondsSlider&&e.setMilliseconds(this.nanosecondsSlider.value/1e6);const t=this.utcToggle.checked?e.toISOString():e.toLocaleString(this.settings.language);this.settings.showSelectedDatetime&&(this.selectedDatetime.value=t),this.settings.mode==="input"&&(this.container.value=t),this.settings.onTimeChange&&this.settings.onTimeChange(e)}toggleFeatures(){this.settings.showCalendar||(this.calendar.style.display="none"),this.settings.showDaysOfWeek||(this.dowDiv.style.display="none"),this.settings.showSliders||(this.container.querySelector(".slider-container").style.display="none"),this.settings.showUTC||(this.utcToggle.parentElement.style.display="none"),this.settings.showDOYtoggle||(this.doyToggle.parentElement.style.display="none")}isSameDate(e,t){return e.getFullYear()===t.getFullYear()&&e.getMonth()===t.getMonth()&&e.getDate()===t.getDate()}}
